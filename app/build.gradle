/*
 * Copyright 2018 Andrius Baruckis www.baruckis.com | mycryptocoins.baruckis.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions' // To implement view binding
apply plugin: 'kotlin-kapt' // For annotation processing

// Version values at Project level versions.gradle.

android {
    compileSdkVersion versions.compile_sdk
    defaultConfig {
        applicationId "com.baruckis.mycryptocoins"
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 1
        versionName "@string/app_version"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])


    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"


    /* Android */

    // Support libraries
    implementation "androidx.appcompat:appcompat:$versions.app_compat"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "com.google.android.material:material:$versions.design"

    // Constraint layout
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

    // Android KTX
    implementation "androidx.core:core-ktx:$versions.ktx"

    // Architecture components
    // LiveData + ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    annotationProcessor "androidx.room:room-compiler:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // Room testing
    androidTestImplementation "androidx.room:room-testing:$versions.room"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "androidx.test:runner:$versions.runner"

    // Espresso UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"


    /* Other */

    // Dagger for dependency injection
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$versions.junit"

    // Dependencies for coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    // Dependency is for the special UI context that can be passed to coroutine builders that use
    // the main thread dispatcher to dispatch events on the main thread.
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // 3rd party
    // HTTP client - Retrofit with OkHttp
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    // JSON converter Gson for JSON to Java object mapping
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // UI
    implementation "eu.davidea:flipview:$versions.flip_view"

    //Debug bridge
    implementation "com.facebook.stetho:stetho:$versions.stetho"
}
